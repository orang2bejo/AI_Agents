name: Dependency Security Check

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM UTC
  push:
    paths:
      - 'requirements*.txt'
      - 'pyproject.toml'
  workflow_dispatch:

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install safety
      run: |
        pip install safety pip-audit
    
    - name: Check dependencies for known vulnerabilities
      run: |
        safety check -r requirements.txt --json --output safety-report.json
        pip-audit -r requirements.txt --format=json --output=pip-audit-report.json
      continue-on-error: true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          safety-report.json
          pip-audit-report.json
      continue-on-error: true
    
    - name: Check for outdated packages
      run: |
        pip install pip-check
        pip list --outdated
      continue-on-error: true

  license-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pip-licenses
    
    - name: Check licenses
      run: |
        pip-licenses --format=json --output-file=licenses.json
        pip-licenses --summary
    
    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-report
        path: licenses.json

  dependency-update:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install pip-tools
      run: |
        pip install pip-tools
    
    - name: Update dependencies
      run: |
        pip-compile --upgrade requirements.in || echo "No requirements.in found"
        pip-compile --upgrade requirements-dev.in || echo "No requirements-dev.in found"
    
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'Automated dependency update'
        body: |
          This PR updates dependencies to their latest compatible versions.
          
          Please review the changes and test thoroughly before merging.
          
          Generated by GitHub Actions.
        branch: dependency-updates
        delete-branch: true
      continue-on-error: true